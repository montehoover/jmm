* Debugging

** <2021-06-18 Fri>

*** transporting ~t_in~ and ~amplitude_in~

    *the setup*:
    - we have a diffracting edge that's incident on a reflector or
      diffractor, so that ~amplitude_in~ and ~t_in~ are undefined at the
      point of contact

    *the problem*:
    - transporting either of these leads to problems since the linear
      combination of ~NAN~ and normal numbers ~== NAN~

    *the solution*:
    - [ ] we want to do extra updates on the fly to fill-in these
      values at nodes which are updated from the singular point so
      that when we transport afterwards, we just propagate "good
      values"
    - [ ] when initializing the value of T along the edge using a
      Hermite polynomial, we want to just use the directional
      derivative of T in the direction of the diffracting edge, which
      /is/ defined
    - [ ] we want amplitude at the singular point to be ~NAN~
    - [ ] we want to do local triangle updates to evaluate ~t_in~ and
      ~amplitude_in~ at neighboring points
      - we know the location of the parent of a downwind node that
        will receive a bad value
      - we know which diffracting edge would have shot a ray to the
        parent
      - so, do that triangle update, and pull out as the info we need
      - [ ] ~t_in~: this is just the local ray direction
      - [ ] ~amplitude_in~: this more complicated... need to work out
        how to do this
    - [ ] ~_impute_diffracted_t_in~ is a hack, we want to remove it at
      the end of all this!

** <2021-06-20 Sun>

*** making sure UTD is correct

    - [ ] fix rho1 near diffracting edge
      - looks like rho1 is getting a weirdly large value if updated
        from a terminal point on a diffracting edge
      - these indices are bad: *1973, 2658, 4960, 5191, 5231, 5486, 7013*
        - what do they have in common?

** <2021-06-21 Mon>

*** continuing to debug...

    - [ ] fixing ~D7 -> R15 -> R35 -> P4~
      - D7 is a diffracting edge getting updated by grazing rays
        travelling along a wall leading to R15
      - several rays on D7 get updated from 1pt updates erroneously,
        and a corner point just gets a wacky update for some reason
      - [ ] erroneous 1pt updates: *333, 2825, 3258, 3928*
      - [ ] wacky update: *3064*
